"""Updated migration

Revision ID: ac2add305316
Revises: d361e0be6091
Create Date: 2025-06-03 00:39:43.780136

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ac2add305316'
down_revision: Union[str, None] = 'd361e0be6091'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brokers',
    sa.Column('broker_id', sa.UUID(), nullable=False),
    sa.Column('broker_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('broker_id')
    )
    op.create_table('subscription_plans',
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('plan_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('pricing', sa.DECIMAL(), nullable=True),
    sa.PrimaryKeyConstraint('plan_id')
    )
    op.create_table('strategies',
    sa.Column('strategy_id', sa.UUID(), nullable=False),
    sa.Column('strategy_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('win_rate', sa.DECIMAL(), nullable=True),
    sa.Column('risk_to_reward', sa.DECIMAL(), nullable=True),
    sa.Column('minimum_capital', sa.DECIMAL(), nullable=True),
    sa.Column('plan_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.plan_id'], ),
    sa.PrimaryKeyConstraint('strategy_id')
    )
    op.create_table('trades',
    sa.Column('trade_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('symbol', sa.String(), nullable=True),
    sa.Column('trade_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('order_type', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('entry_price', sa.DECIMAL(), nullable=True),
    sa.Column('exit_price', sa.DECIMAL(), nullable=True),
    sa.Column('profit_loss', sa.DECIMAL(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('trade_id')
    )
    op.create_table('user_brokers',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('broker_id', sa.UUID(), nullable=False),
    sa.Column('client_code', sa.String(), nullable=True),
    sa.Column('user_api_key', sa.Text(), nullable=True),
    sa.Column('jwt_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['broker_id'], ['brokers.broker_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'broker_id')
    )
    op.create_table('user_funds',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('margin_used', sa.DECIMAL(), nullable=True),
    sa.Column('funds_available', sa.DECIMAL(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_subscriptions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('subscribed_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.plan_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'plan_id')
    )
    op.create_table('user_strategies',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('strategy_id', sa.UUID(), nullable=False),
    sa.Column('strategy_status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.strategy_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'strategy_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_strategies')
    op.drop_table('user_subscriptions')
    op.drop_table('user_funds')
    op.drop_table('user_brokers')
    op.drop_table('trades')
    op.drop_table('strategies')
    op.drop_table('subscription_plans')
    op.drop_table('brokers')
    # ### end Alembic commands ###
